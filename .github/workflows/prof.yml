# .github/workflows/terraform.yml
name: Terraform Simple Deploy

on:
  push:
    branches: [ prod ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Terraform Init & Apply
        env:
          TF_VAR_aws_region: ${{ secrets.TF_VAR_aws_region }}
          TF_VAR_ami_id: ${{ secrets.TF_VAR_ami_id }}
          TF_VAR_instance_type: ${{ secrets.TF_VAR_instance_type }}
          TF_VAR_vpc_id: ${{ secrets.TF_VAR_vpc_id }}
          TF_VAR_my_ip: ${{ secrets.TF_VAR_my_ip }}
          TF_VAR_environment: ${{ secrets.TF_VAR_environment }}
          TF_VAR_project: ${{ secrets.TF_VAR_project }}
          TF_VAR_db_identifier: ${{ secrets.TF_VAR_db_identifier }}
          TF_VAR_db_username: ${{ secrets.TF_VAR_db_username }}
          TF_VAR_db_password: ${{ secrets.TF_VAR_db_password }}
          TF_VAR_db_instance_class: ${{ secrets.TF_VAR_db_instance_class }}
          TF_VAR_db_allocated_storage: ${{ secrets.TF_VAR_db_allocated_storage }}
          TF_VAR_db_engine_version: ${{ secrets.TF_VAR_db_engine_version }}
          TF_VAR_db_subnet_group_name: ${{ secrets.TF_VAR_db_subnet_group_name }}
          TF_VAR_db_subnet_ids: ${{ secrets.TF_VAR_db_subnet_ids }}
          TF_VAR_key_name: ${{ secrets.TF_VAR_key_name }}
        run: |
          terraform init
          set +e
          terraform apply -auto-approve -input=false
          EXIT_CODE=$?
          set -e

          if [ $EXIT_CODE -ne 0 ]; then
            echo "Terraform apply failed! Destroying created resources..."
            terraform destroy -auto-approve
            exit 1
          fi

